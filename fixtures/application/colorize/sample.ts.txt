punctuation[#!]comment[/usr/bin/env node]
punctuation[//]comment[ Single line comment.]
punctuation[/**]
comment[ * sample.ts]
comment[ * This is a sample `typescript` file for use with the grammar parser.]
comment[ *]
comment[ * It will contain a mix of stuff.]
comment[ ]punctuation[*/]

storage[const]meta[ ]variable[greeting]meta[ ]keyword[=]meta[ ]punctuation[']string[Hello World. Don]constant[\']string[t worry, be happy.]punctuation[']punctuation[;]
punctuation[//]comment[ alias for uniqueFilterFnGenerator]
keyword[export]meta[ ]storage[const]meta[ ]variable[uniqueFn]meta[ ]keyword[=]meta[ ]variable[uniqueFilterFnGenerator]punctuation[;]

keyword[export]meta[ ]storage[function]meta[ ]entity[uniqueFilterFnGenerator]punctuation[<]entity[T]punctuation[>]punctuation[(]punctuation[)]keyword[:]meta[ ]punctuation[(]variable[v]keyword[:]meta[ ]entity[T]punctuation[)]meta[ ]storage[=>]meta[ ]support[boolean]punctuation[;]
keyword[export]meta[ ]storage[function]meta[ ]entity[uniqueFilterFnGenerator]punctuation[<]entity[T]punctuation[,]meta[ ]entity[U]punctuation[>]punctuation[(]entity[extractFn]keyword[:]meta[ ]punctuation[(]variable[v]keyword[:]meta[ ]entity[T]punctuation[)]meta[ ]storage[=>]meta[ ]entity[U]punctuation[)]keyword[:]meta[ ]punctuation[(]variable[v]keyword[:]meta[ ]entity[T]punctuation[)]meta[ ]storage[=>]meta[ ]support[boolean]punctuation[;]
keyword[export]meta[ ]storage[function]meta[ ]entity[uniqueFilterFnGenerator]punctuation[<]entity[T]punctuation[>]punctuation[(]entity[extractFn]keyword[?]keyword[:]meta[ ]punctuation[(]variable[v]keyword[:]meta[ ]entity[T]punctuation[)]meta[ ]storage[=>]meta[ ]entity[T]punctuation[)]keyword[:]meta[ ]punctuation[(]variable[v]keyword[:]meta[ ]entity[T]punctuation[)]meta[ ]storage[=>]meta[ ]support[boolean]meta[ ]punctuation[{]
meta[    ]entity[const]meta[ ]variable[values]meta[ ]keyword[=]meta[ ]keyword[new]new[ ]entity[Set]punctuation[<]entity[T]punctuation[>]meta[(]meta[)]punctuation[;]
meta[    ]entity[const]meta[ ]variable[extractor]meta[ ]keyword[=]meta[ ]variable[extractFn]meta[ ]keyword[||]meta[ ]meta[(]variable[a]meta[ ]storage[=>]meta[ ]variable[a]meta[)]punctuation[;]
meta[    ]entity[return]meta[ ]punctuation[(]variable[v]keyword[:]meta[ ]entity[T]punctuation[)]meta[ => ]punctuation[{]
meta[        ]storage[const]meta[ ]variable[vv]meta[ ]keyword[=]meta[ ]entity[extractor]meta[(]variable[v]meta[)]punctuation[;]
meta[        ]storage[const]meta[ ]variable[ret]meta[ ]keyword[=]meta[ ]keyword[!]variable[values]punctuation[.]support[has]meta[(]variable[vv]meta[)]punctuation[;]
meta[        ]variable[values]punctuation[.]support[add]meta[(]variable[vv]meta[)]punctuation[;]
meta[        ]keyword[return]meta[ ]variable[ret]punctuation[;]
meta[    ]punctuation[}]punctuation[;]
punctuation[}]

keyword[export]meta[ ]storage[function]meta[ ]entity[unique]punctuation[<]entity[T]punctuation[>]punctuation[(]variable[src]keyword[:]meta[ ]entity[T]meta[[]meta[]]punctuation[)]keyword[:]meta[ ]entity[T]meta[[]meta[]]meta[ ]punctuation[{]
meta[    ]entity[return]meta[ ]meta[[]meta[...]meta[(]entity[new]meta[ ]entity[Set]meta[(]entity[src]meta[)]meta[)]meta[]]punctuation[;]
punctuation[}]

storage[function]meta[ ]entity[main]punctuation[(]punctuation[)]meta[ ]punctuation[{]
punctuation[    ]punctuation[//]comment[ Write something to the console.]
meta[    ]support[console]punctuation[.]support[log]meta[(]punctuation[']string[Hello World.]punctuation[']meta[)]punctuation[;]
meta[    ]storage[let]meta[ ]variable[a]meta[ ]keyword[=]meta[ ]constant[2]meta[ ]keyword[+]meta[ ]variable[greeting]punctuation[.]support[length]punctuation[;]meta[  ]punctuation[//]comment[ some random value.]
meta[    ]storage[const]meta[ ]variable[values]meta[ ]keyword[=]meta[ ]meta[[]constant[1]punctuation[,]meta[ ]constant[2]punctuation[,]meta[ ]constant[3]punctuation[,]meta[ ]constant[3]punctuation[,]meta[ ]constant[4]punctuation[,]meta[ ]variable[a]punctuation[,]meta[ ]constant[5]punctuation[,]meta[ ]constant[6]meta[]]punctuation[;]
meta[    ]support[console]punctuation[.]support[log]meta[(]variable[values]meta[)]punctuation[;]
meta[    ]support[console]punctuation[.]support[log]meta[(]entity[unique]meta[(]variable[values]meta[)]meta[)]punctuation[;]
punctuation[}]

entity[main]meta[(]meta[)]punctuation[;]

